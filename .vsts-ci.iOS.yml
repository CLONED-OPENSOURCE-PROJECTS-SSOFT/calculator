jobs:
- job: iOS

  pool:
    name: Default
    demands:
    - Agent.OS -equals Darwin
    - Xamarin.iOS -equals Stable

  variables:
    - name: NUGET_PACKAGES
      value: $(build.sourcesdirectory)/.nuget
    - name: VersionCodeOffset
      value: 400559 # last value for the APK release
    - group: apple.appstore.distribution

  workspace:
     clean: all

  steps:
  - task: UseDotNet@2
    displayName: 'Use .Net Core runtime 2.2.0'
    inputs:
      packageType: runtime
      version: 2.2.0

  - task: nventiveCanaryUpdater@5
    displayName: 'Canary Update'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')
    inputs:
      solution: src/Calculator.sln
      branchToMerge: uno
      summaryFile: '$(Build.ArtifactStagingDirectory)/Canary.md'
      resultFile: '$(Build.ArtifactStagingDirectory)/result.json'
      nugetUpdaterVersion: 2.0.2
      packageAuthor: nventive
  
  #- bash: /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_18_1"
  #  displayName: Select Xamarin Version
  
  - bash: |
      shopt -s nullglob
      function join_by { local IFS="$1"; shift; echo "$*"; }
      lib_path=$(join_by ';' $(Agent.WorkFolder)/_tasks/GitVersion*/4.0.*/lib/osx)
      echo LD_LIBRARY_PATH: $lib_path
      echo "##vso[task.setvariable variable=LD_LIBRARY_PATH]$lib_path"
    displayName: Update LD_LIBRARY_PATH for GitVersion

  - task: GitVersion@5
    inputs:
      useConfigFile: true
      configFilePath: gitversion.yml

  - task: UseDotNet@2
    displayName: 'Use .Net Core runtime 3.1.201'
    inputs:
      packageType: runtime
      version: 3.1.201

  - task: InstallAppleCertificate@2
    displayName: Install Bundle Apple Certificate
    inputs:
      certSecureFile: 'apple.appstore.distribution.p12'
      certPwd: '$(appleappstorecertificatepassword)'
      keychain: 'temp'
      deleteCert: true

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install an Apple provisioning profile'
    inputs:
      provProfileSecureFile: 'Uno_Calculator.mobileprovision'

  - bash: |
      cd $(build.sourcesdirectory)/src/CalcManager
      chmod +x build_ios.sh
      ./build_ios.sh

    displayName: Build native CalcManager

  - task: MSBuild@1
    inputs:
      solution: '$(build.sourcesdirectory)/src/build/build.csproj'
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r  /p:BuildPlatformTarget=iOS /bl:$(build.artifactstagingdirectory)/build.binlog 
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: true
      createLogFile: true

  - task: MSBuild@1
    inputs:
      solution: '$(build.sourcesdirectory)/src/Calculator.iOS/Calculator.iOS.csproj'
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /p:Configuration=Release /p:Platform=iPhone /bl:$(build.artifactstagingdirectory)/build.binlog  "/p:InformationalVersion=$GITVERSION_INFORMATIONALVERSION" 
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: true
      createLogFile: true

  - task: CopyFiles@2
    displayName: 'Publish iOS Binaries'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Calculator.iOS/bin/iPhone/Release
      Contents: '*.ipa'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: Uno-Calculator-iOS
      ArtifactType: Container
